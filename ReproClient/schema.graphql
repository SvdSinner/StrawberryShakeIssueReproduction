schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Mutation {
  updateBank(input: UpdateBankInput!): UpdateBankPayload!
}

type Query {
  account(accountNumber: String): Account
  filteredAccountNumbers(filter: String allowSmallFilters: Boolean! = false): [String!]!
}

type Subscription {
  onProgramAdded: Account!
  onAccountModified: Account!
}

type Account {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  openClaim: Boolean!
  yearOpened: String
  branch: String!
  agencyNumber: String
  dunBradstreetRate: String
  dunBradstreetDate: Date
  dunBradstreetSic: String
  bank: String
  bankReferenceName: String
  bankAverageBalance: Int
  bankPhoneId: UUID
  bankLastContacted: Date
  bankLoc: Int
  bankLocexpires: Date
  bankLocused: Int
  bankLochigh: Int
  bankLochighDate: Date
  bankLocsecurity: String
  publicPercent: Float
  privatePercent: Float
  subcontractPercent: Float
  subcontractProtection: String
  geographicSpread: String
  paydexIntelliscore: Int
  priorSuretyCompany: String
  currentManagementYear: String
  indemnityFull: Boolean!
  indemnityCorp: Boolean!
  indemnityPerson: Boolean!
  berkleyAffiliate: Boolean!
  continuityKeyManagementLifeInsurance: Boolean!
  continuityManagementIncentives: Boolean!
  continuityFundedBuySell: Boolean!
  continuityActiveMultipleOwners: Boolean!
  fiscalYearEnd: String
  taxBasis: String
  agentId: UUID
  businessType: String
  division: String!
  rateModifier: Float!
  lawFirmId: UUID
  attorneyId: UUID
  cpafirmId: UUID
  cpacontactId: UUID
  underwriterId: UUID
  watchStatus: String!
  naics: String
  homeOfficeReviewBy: UUID
  homeOfficeReviewed: DateTime
  branchReviewBy: UUID
  branchReviewed: DateTime
  homeOfficeLock: Boolean!
  businessTypeClass: String
  fundsControl: Boolean!
  polutionLiabilityCarrier: String
  polutionLiabilityExpires: Date
  affiliateCompany: Boolean!
  creditReport: String
  estimatingSystem: String
  estimatingSignoff: String
  accountingSystem: String
  pocinterims: Boolean!
  interimWips: Boolean!
  accountPrograms: [AccountProgram!]!
  additionalRelatedParties: [AdditionalRelatedParty!]!
  agencyCompetitions: [AgencyCompetition!]!
  agencyNumberNavigation: Agency
  agent: Agent
  attorney: LawEntity
  balanceSheets: [BalanceSheet!]!
  bankPhone: PhoneNumber
  bondHolds: [BondHold!]!
  bondRequestCommercials: [BondRequestCommercial!]!
  bondRequests: [BondRequest!]!
  bondTransactions: [BondTransaction!]!
  bonds: [Bond!]!
  branchNavigation: Branch!
  branchReviewByNavigation: UserProfile
  businessTypeClassNavigation: BusinessTypeClassCodeDm
  businessTypeNavigation: BusinessTypeDm
  cashFlowStatements: [CashFlowStatement!]!
  coPrincipals: [CoPrincipal!]!
  cpacontact: LegalEntity
  cpafirm: LegalEntity
  divisionNavigation: DivisionDm!
  emailHistories: [EmailHistory!]!
  homeOfficeReviewByNavigation: UserProfile
  idNavigation: LegalEntity!
  indemnitors: [Indemnitor!]!
  keyPersonels: [KeyPersonel!]!
  lawFirm: LawEntity
  personalFinancialStatements: [PersonalFinancialStatement!]!
  ratios: [Ratio!]!
  taxBasisNavigation: TaxBasisDm
  underwriter: Underwriter
  underwriterRecommendations: [UnderwriterRecommendation!]!
  watchStatusNavigation: WatchStatusDm!
  workInProgressJobs: [WorkInProgressJob!]!
}

input UpdateBankInput {
  accountNum: String!
  bank: String!
}

"The `Date` scalar represents an ISO-8601 compliant date type."
scalar Date

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime

scalar UUID

type AccountProgram {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  effective: DateTime!
  expiration: DateTime!
  single: Int!
  aggregate: Int!
  comments: String
  statusId: UUID!
  createdBy: String!
  approvedBy: String
  approvedDate: DateTime
  homeOfficeApproved: Boolean!
  accountNumNavigation: Account!
  accountProgramStatusHistories: [AccountProgramStatusHistory!]!
}

type AdditionalRelatedParty {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  indemnity: Boolean!
  financialStatements: Boolean!
  guarantor: Boolean!
  comments: String
  accountNumNavigation: Account!
  idNavigation: LegalEntity!
}

type AgencyCompetition {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  agencyId: UUID!
  annualBusiness: Int!
  annualCommission: Int
  enteredBy: UUID!
  accountNumNavigation: Account!
  agency: Agency!
  enteredByNavigation: UserProfile!
}

type Agency {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  agencyNumber: String!
  branch: String
  status: String!
  comments: String
  nasbp: Boolean!
  w9: Boolean!
  profitSharing: Boolean!
  profitSharingMinimumPremium: Int
  billingContactId: UUID
  nationalProducerNumber: String
  errorsAndOmmissionsCarrier: String
  errorsAndOmmissionsExpiration: DateTime
  errorsAndOmmissionsCoverage: Int
  accounts: [Account!]!
  agencyCompetitions: [AgencyCompetition!]!
  agencyErrorAndOmissions: [AgencyErrorAndOmission!]!
  agencyInventories: [AgencyInventory!]!
  agentsInAgencies: [AgentsInAgency!]!
  billingContact: LegalEntity
  bondTransactions: [BondTransaction!]!
  idNavigation: LegalEntity!
  onlineBondSystems: [OnlineBondSystem!]!
  statusNavigation: AgencyStatusDm!
  voidedBonds: [VoidedBond!]!
}

type Agent {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  nationalProducerNumber: String
  defaultPhoneNumber: UUID
  defaultCellNumber: UUID
  defaultEmail: String
  accounts: [Account!]!
  agentsInAgencies: [AgentsInAgency!]!
  defaultCellNumberNavigation: PhoneNumber
  defaultPhoneNumberNavigation: PhoneNumber
  idNavigation: LegalEntity!
}

type LawEntity {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  martindaleHubbellRating: String
  comment: String
  accountAttorneys: [Account!]!
  accountLawFirms: [Account!]!
  bonds: [Bond!]!
  idNavigation: LegalEntity!
}

type BalanceSheet {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  statementDate: Date!
  accountType: String!
  sequence: Int!
  accountName: String
  stated: Int
  adjustment: Int
  asAllowed: Int
  comments: String
  accountNumNavigation: Account!
  ratio: Ratio!
  subaccounts: [Subaccount!]!
}

type PhoneNumber {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  countryCode: String!
  mainNumber: String!
  extension: String
  accounts: [Account!]!
  agentDefaultCellNumberNavigations: [Agent!]!
  agentDefaultPhoneNumberNavigations: [Agent!]!
  branches: [Branch!]!
  legalEntityPhone: LegalEntityPhone
}

type BondHold {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bondNumber: String!
  accountNum: String!
  bondTypeId: UUID
  risk: String
  branch: String
  underWriterId: UUID
  agencyId: UUID
  agentId: UUID
  obligeeId: UUID
  responsiblePartyId: UUID
  insurerId: UUID
  siccode: String
  state: String
  municipality: String
  effective: DateTime
  expiration: DateTime
  billDate: Date
  sfaacode: Int
  sfaaclassCode: Int
  statusLetterNext: Date
  contractAmount: Int
  bondAmount: Int
  payBondAmout: Int
  premium: Int
  municipalTax: Float
  commissionRate: Float
  riskDescription: Float
  comments: String
  externalRemarks: String
  rate: String
  rateStructure: String
  rateClass: String
  terminationType: String
  cancellable: Boolean!
  renewalProvision: Boolean
  currentTreatyYear: Int
  accountingDate: Date
  bidNumber: String
  homeOfficeApproved: DateTime
  homeOfficeApprovedBy: UUID
  homeOfficeAction: String
  isDirectBill: Boolean
  commissionAmount: Float
  bondPostalCode: String
  daysToCancel: Int
  surchargeApply: Boolean!
  surcharge: Float
  accountNumNavigation: Account!
  agency: LegalEntity
  agent: LegalEntity
  bondType: BondTypeDm
  homeOfficeApprovedByNavigation: UserProfile
  insurer: Insurer
  obligee: LegalEntity
  responsibleParty: LegalEntity
  sfaacodeNavigation: Sfaa
  siccodeNavigation: Sic
  stateNavigation: State
  underWriter: Underwriter
}

type BondRequestCommercial {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bondRequestNumber: String!
  accountNum: String!
  requested: Date!
  legacyBidNumber: Int
  status: String!
  estimatedStart: Date
  estimatedFinish: Date
  obligeeId: UUID
  amount: Int
  recordedBy: UUID
  recorded: Date
  recordedMessageSent: DateTime
  homeOfficeAction: String
  homeOfficeActionDate: DateTime
  homeOfficeApprovedBy: UUID
  homeOfficeConditions: String
  bondNumber: String
  description: String
  underWriterId: UUID
  sfaaCode: Int
  ccto: UUID
  lineOfCreditSingle: Int
  lineOfCreditAggregate: Int
  lineOfCreditExpiration: Date
  exposure: Int
  adjustments: Int
  totalExposure: Int
  approvedBidAmount: Int
  accountNumNavigation: Account!
  bondNumberNavigation: Bond
  cctoNavigation: UserProfile
  homeOfficeApprovedByNavigation: UserProfile
  obligee: LegalEntity
  recordedByNavigation: UserProfile
  sfaaCodeNavigation: Sfaa
  statusNavigation: BidStatusDm!
  underWriter: Underwriter
}

type BondRequest {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bondRequestNumber: String!
  accountNum: String!
  requested: Date!
  bidDate: Date
  obligeeId: UUID
  estimatedStart: Date
  estimatedFinish: Date
  contractNumber: String
  projectName: String
  description: String
  estimatedContractPrice: Int
  withdrawalPenalty: String
  performanceBondAmount: Int
  paymentBondAmount: Int
  maintenanceTerm: String
  penalties: String
  paymentFrequency: String
  retainage: String
  specialHazards: String
  geographicConcerns: String
  comments: String
  conditions: String
  wipworkOnHand: Long
  wipdate: Date
  newContractsLowBids: Int
  estimatedBacklogRunoff: Int
  totalWorkOnHand: Long
  lineOfCreditSingle: Int
  lineOfCreditAggregate: Int
  lineOfCreditExpiration: Date
  requestedBy: String
  approvedBy: String
  bondNumber: String
  laborPercentage: Int
  materialPercentage: Int
  subcontractedPercentage: Int
  generalConditionsPercentage: Int
  estimateGrossProfitPercentage: Int
  equipmentPercentage: Int
  bidResult: String
  homeOfficeApproved: DateTime
  homeOfficeApprover: UUID
  homeOfficeEmailSent: DateTime
  homeOfficeAction: String
  underWriterId: UUID
  requestType: String!
  outstandingBids: Int
  adjustments: Int
  actualBidAmount: Int
  approvedBidAmount: Int
  ccto: UUID
  status: String!
  homeOfficeConditions: String
  accountNumNavigation: Account!
  bidResultNavigation: BidResultDm
  bidSubcontractors: [BidSubcontractor!]!
  bondNumberNavigation: Bond
  cctoNavigation: UserProfile
  homeOfficeApproverNavigation: UserProfile
  obligee: Obligee
  otherBids: [OtherBid!]!
  statusNavigation: BidStatusDm!
  underWriter: Underwriter
}

type BondTransaction {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bondNumber: String!
  bondMod: Int!
  groupNumber: Int!
  accountNum: String!
  type: String
  branch: String!
  midtermDescription: String
  paymentBondAmount: Int
  premium: Int!
  bondAmount: Int!
  contractAmount: Int
  effective: DateTime!
  expiration: DateTime!
  coverageDate: DateTime!
  billDate: DateTime!
  commissionRate: Float!
  commissionAmount: Float!
  adminFee: Float
  surcharge: Float!
  municipalTax: Float!
  comments: String
  accountingDate: Date!
  paidToDate: Float!
  agencyId: UUID!
  netDue: Float!
  earned: Float!
  unearned: Float!
  sfaaCode: Int!
  directBill: Boolean!
  region: String!
  accountClass: String!
  surchargeApply: Boolean!
  agencyChange: UUID
  transactionPurpose: String
  transactionGroup: UUID!
  rate: String
  rateStructure: String
  rateClass: String
  underwriterId: UUID!
  accountClassNavigation: AccountClassDm!
  accountNumNavigation: Account!
  agency: Agency!
  bondNumberNavigation: Bond!
  bondTransactionPurposes: [BondTransactionPurpose!]!
  regionNavigation: RegionDm!
  sfaaCodeNavigation: Sfaa!
  underwriter: Underwriter!
}

type Bond {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bondNumber: String!
  currentBondMod: Int!
  accountNum: String!
  bondTypeId: UUID
  effective: DateTime!
  expiration: DateTime!
  status: String!
  underWriterId: UUID!
  agentId: UUID
  renewalProvision: String
  cancellable: Boolean
  insurerId: UUID!
  agencyId: UUID!
  state: String!
  riskDescription: String
  comments: String
  terminationType: String
  sfaaclassCode: Int
  siccode: String
  additionalObligees: Boolean!
  currentTreatyYear: Int
  municipality: String
  bondClass: String!
  risk: String
  shortRiskDescription: String
  jointVenture: Boolean!
  obligeeId: UUID
  responsiblePartyId: UUID
  rateGroup: String!
  rateMultiplier: Float
  ceritifiedMailNumber: String
  nonrenewalLetterMailed: DateTime
  hasCollateral: Boolean!
  subjectToRunoff: Boolean!
  federal: Boolean
  homeOfficeApproved: DateTime
  homeOfficeApprovedBy: String
  homeOfficeAction: String
  lineOfAuthorityExpiration: DateTime
  lineOfAuthoritySingle: Int
  lineOfAuthorityAggregate: Int
  lineOfAuthorityException: Boolean
  lineOfAuthorityExceptionDescription: String
  currentBondLiability: Int!
  currentRunoff: Int!
  estimatedBondLiability: Int
  claim: Boolean!
  attorneyInFactId: UUID
  isDirectBill: Boolean
  directBillAddressId: UUID
  bondPostalCode: String
  daysToCancel: Int
  externalRemarks: String
  sfaabondType: String
  accountNumNavigation: Account!
  additionalObligeesNavigation: [AdditionalObligee!]!
  agency: LegalEntity!
  agent: LegalEntity
  attorneyInFact: LawEntity
  bondRequestCommercials: [BondRequestCommercial!]!
  bondRequests: [BondRequest!]!
  bondStatusLetters: [BondStatusLetter!]!
  bondTransactionPurposes: [BondTransactionPurpose!]!
  bondTransactions: [BondTransaction!]!
  bondType: BondTypeDm
  coPrincipals: [CoPrincipal!]!
  collaterals: [Collateral!]!
  directBillAddress: Address
  emailHistories: [EmailHistory!]!
  insurer: Insurer!
  obligee: LegalEntity
  openClaims: [OpenClaim!]!
  responsibleParty: LegalEntity
  sfaabondTypeNavigation: SfaabondTypeDm
  siccodeNavigation: Sic
  stateNavigation: State!
  underWriter: Underwriter!
  workInProgressJobs: [WorkInProgressJob!]!
}

type Branch {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  branchKey: String!
  name: String!
  branchOfficeAddressId: UUID!
  phoneId: UUID!
  homeOffice: Boolean!
  emailReceiver: String!
  bccreceiver: String
  generalLedgerCode: String
  active: Boolean!
  region: String!
  headCount: Int
  accounts: [Account!]!
  branchOfficeAddress: Address!
  phone: PhoneNumber!
  regionNavigation: RegionDm!
}

type UserProfile {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  initials: String!
  fullName: String!
  title: String
  primaryBranchId: UUID
  username: String!
  underwriter: Boolean!
  homeOfficeApprover: Boolean!
  accountBranchReviewByNavigations: [Account!]!
  accountHomeOfficeReviewByNavigations: [Account!]!
  accountProgramEmailNotificationGroups: [AccountProgramEmailNotificationGroup!]!
  accountProgramUserAuthorityCreatedByNavigations: [AccountProgramUserAuthority!]!
  accountProgramUserAuthorityModifiedByNavigations: [AccountProgramUserAuthority!]!
  accountProgramUserAuthorityUsers: [AccountProgramUserAuthority!]!
  accountStatusLogs: [AccountStatusLog!]!
  agencyCompetitions: [AgencyCompetition!]!
  agencyInventories: [AgencyInventory!]!
  agencyStatusLogs: [AgencyStatusLog!]!
  bondBlocks: [BondBlock!]!
  bondHolds: [BondHold!]!
  bondRequestCctoNavigations: [BondRequest!]!
  bondRequestCommercialCctoNavigations: [BondRequestCommercial!]!
  bondRequestCommercialHomeOfficeApprovedByNavigations: [BondRequestCommercial!]!
  bondRequestCommercialRecordedByNavigations: [BondRequestCommercial!]!
  bondRequestHomeOfficeApproverNavigations: [BondRequest!]!
  lineOfAuthorityLogApprovedByNavigations: [LineOfAuthorityLog!]!
  lineOfAuthorityLogCreatedByNavigations: [LineOfAuthorityLog!]!
  notebookEntries: [NotebookEntry!]!
  obligees: [Obligee!]!
  surcharges: [Surcharge!]!
  underwriterRecommendations: [UnderwriterRecommendation!]!
  userLineOfAuthorityCreatedByNavigations: [UserLineOfAuthority!]!
  userLineOfAuthorityModifiedByNavigations: [UserLineOfAuthority!]!
  userLineOfAuthorityUsers: [UserLineOfAuthority!]!
  voidedBonds: [VoidedBond!]!
}

type BusinessTypeClassCodeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  businessType: String!
  classCode: Int!
  isContract: Boolean!
  accounts: [Account!]!
}

type BusinessTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  businessType: String!
  accounts: [Account!]!
}

type CashFlowStatement {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  statementDate: Date!
  type: String!
  basis: String
  scaling: String!
  taxBasis: String
  quality: String
  netIncome: Int
  depreciationAmoritization: Int
  accountsReceivable: Int
  accountsReceivableRetention: Int
  b2cee: Int
  allOtherCashFlow: Int
  totalCashFlowsOperations: Int
  netFixedAssetsAcquired: Int
  allOtherInvestments: Int
  totalCashInvestments: Int
  distributions: Int
  lineOfCredit: Int
  termDebt: Int
  stockholderNotes: Int
  allOtherFinancing: Int
  totalCashFinancing: Int
  netChangeInCash: Int
  netFixedAssetsAcquiredDebt: Int
  accountNumNavigation: Account!
  basisNavigation: StatementBasisDm
  qualityNavigation: StatementQualityDm
  scalingNavigation: ScalingDm!
  taxBasisNavigation: TaxBasisDm
  typeNavigation: StatementTypeDm!
}

type CoPrincipal {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bondNumber: String!
  accountNum: String!
  profession: String
  yearsInProfession: Int
  liabilityAmount: Float
  comments: String
  accountNumNavigation: Account!
  bondNumberNavigation: Bond!
}

type LegalEntity {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  parent: UUID!
  fullName: String!
  givenName: String
  familyName: String
  middleInitial: String
  entityType: String!
  website: String
  isIndividual: Boolean!
  taxIdEncrypted: String
  accountCpacontacts: [Account!]!
  accountCpafirms: [Account!]!
  accountIdNavigation: Account
  accountReference: AccountReference
  additionalRelatedParty: AdditionalRelatedParty
  agencyBillingContacts: [Agency!]!
  agencyIdNavigation: Agency
  agencyInventories: [AgencyInventory!]!
  agencyLicenseAgents: [AgencyLicense!]!
  agencyLicenseIdNavigation: AgencyLicense
  agent: Agent
  bondAgencies: [Bond!]!
  bondAgents: [Bond!]!
  bondHoldAgencies: [BondHold!]!
  bondHoldAgents: [BondHold!]!
  bondHoldObligees: [BondHold!]!
  bondHoldResponsibleParties: [BondHold!]!
  bondObligees: [Bond!]!
  bondRequestCommercials: [BondRequestCommercial!]!
  bondResponsibleParties: [Bond!]!
  entityTypeNavigation: LegalEntityTypeDm!
  indemnitor: Indemnitor
  insurer: Insurer
  inverseParentNavigation: [LegalEntity!]!
  keyPersonel: KeyPersonel
  lawEntity: LawEntity
  legalEntityAddresses: [LegalEntityAddress!]!
  legalEntityEmails: [LegalEntityEmail!]!
  legalEntityPhones: [LegalEntityPhone!]!
  obligee: Obligee
  parentNavigation: LegalEntity
  personalFinancialHeaders: [PersonalFinancialHeader!]!
}

type DivisionDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  divisionCode: String!
  division: String!
  loanotificationGroup: String!
  active: Boolean!
  accounts: [Account!]!
  imagingCategoryTabDivisions: [ImagingCategoryTabDivision!]!
  lineOfAuthorityLogs: [LineOfAuthorityLog!]!
  profitCenters: [ProfitCenter!]!
}

type EmailHistory {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  from: String!
  fromName: String!
  to: String!
  toName: String!
  cc: String
  accountNum: String!
  bondNumber: String!
  sent: DateTime!
  action: String!
  isContract: Boolean!
  accountNumNavigation: Account!
  actionNavigation: EmailActionDm!
  bondNumberNavigation: Bond!
}

type Indemnitor {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  agreementDate: Date!
  agreementType: String
  agreementForm: String
  netLiquidAssets: Int
  netWorth: Int
  indemnityAmount: Int
  spouseIndemnitor: Boolean!
  encryptSpouseTaxId: String
  signatory: String
  title: String
  accountNumNavigation: Account!
  idNavigation: LegalEntity!
}

type KeyPersonel {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  encryptYearOfBirth: String
  position: String
  responsibility: String
  yearJoinedCompany: String
  yearEnteredField: String
  spouseName: String
  personalIndemnification: Boolean!
  comments: String
  profession: String
  accountNumNavigation: Account!
  idNavigation: LegalEntity!
  responsibilityNavigation: ResponsibilityDm
}

type PersonalFinancialStatement {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  statementDate: Date!
  accountType: String!
  sequence: Int!
  accountName: String
  stated: Int
  adjustment: Int
  asAllowed: Int
  comments: String
  headerId: UUID!
  accountNumNavigation: Account!
  header: PersonalFinancialHeader!
  personalFinancialSubaccounts: [PersonalFinancialSubaccount!]!
}

type Ratio {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  statementDate: Date!
  statementType: String
  statementBasis: String
  statementTaxBasis: String
  statementQuality: String
  workingCapitalStated: Int
  totalAssetsStated: Int
  retainedEarningsStated: Int
  earningsBeforeTaxesStated: Int
  netWorthStated: Int
  totalLiabilitiesStated: Int
  totalEquityStated: Int
  totalRevenueStated: Int
  totalCostOfGoodsSoldStated: Int
  currentAssetsStated: Int
  currentLiabilitiesStated: Int
  netIncomeStated: Int
  inventoryStated: Int
  fixedAssetsStated: Int
  accountsReceivableStated: Int
  accountsPayableStated: Int
  subordinatedNotesStated: Int
  retainageReceivedStated: Int
  retainagePayableStated: Int
  cashPlusEarningsGreaterThanBillingsStated: Int
  billingsGreaterThanCostsPlusEarningsStated: Int
  prepaidExpensesStated: Int
  cashInventoryStated: Int
  otherCurrentAssetsStated: Int
  bankDebtStated: Int
  gaexpensesStated: Int
  operatingProfitStated: Int
  incomeAfterTaxesStated: Int
  cashStated: Int
  notesStated: Int
  qscoreStated: Int
  qprofitStated: Int
  qnetworthStated: Int
  qleverageStated: Int
  qworkingCapitalStated: Int
  qcratioStated: Int
  workingCapitalAllowed: Int
  totalAssetsAllowed: Int
  retainedEarningsAllowed: Int
  earningsBeforeTaxesAllowed: Int
  netWorthAllowed: Int
  totalLiabilitiesAllowed: Int
  totalEquityAllowed: Int
  totalRevenueAllowed: Int
  totalCostOfGoodsSoldAllowed: Int
  currentAssetsAllowed: Int
  currentLiabilitiesAllowed: Int
  netIncomeAllowed: Int
  inventoryAllowed: Int
  fixedAssetsAllowed: Int
  accountsReceivableAllowed: Int
  accountsPayableAllowed: Int
  subordinatedNotesAllowed: Int
  retainageReceivedAllowed: Int
  retainagePayableAllowed: Int
  cashPlusEarningsGreaterThanBillingsAllowed: Int
  billingsGreaterThanCostsPlusEarningsAllowed: Int
  prepaidExpensesAllowed: Int
  cashInventoryAllowed: Int
  otherCurrentAssetsAllowed: Int
  bankDebtAllowed: Int
  gaexpensesAllowed: Int
  operatingProfitAllowed: Int
  incomeAfterTaxesAllowed: Int
  cashAllowed: Int
  notesAllowed: Int
  qscoreAllowed: Int
  qprofitAllowed: Int
  qnetworthAllowed: Int
  qleverageAllowed: Int
  qworkingCapitalAllowed: Int
  qcratioAllowed: Int
  scaling: String
  singleLoa: Int
  aggregateLoa: Int
  largestJob: Int
  largestBacklog: Int
  cashFromOperations: Int
  cashFromInvestments: Int
  cashFromFinancing: Int
  comments: String
  netChangeCash: Int
  accountNumNavigation: Account!
  balanceSheets: [BalanceSheet!]!
}

type TaxBasisDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  taxBasis: String!
  accounts: [Account!]!
  cashFlowStatements: [CashFlowStatement!]!
  personalFinancialHeaders: [PersonalFinancialHeader!]!
}

type Underwriter {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  notificationSendTo: String
  dropDownList: Boolean!
  reportsTo: UUID
  accounts: [Account!]!
  bondHolds: [BondHold!]!
  bondRequestCommercials: [BondRequestCommercial!]!
  bondRequests: [BondRequest!]!
  bondTransactions: [BondTransaction!]!
  bonds: [Bond!]!
  idNavigation: Employee!
  profitCenters: [ProfitCenter!]!
  reportsToNavigation: Employee
}

type UnderwriterRecommendation {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  postedBy: UUID!
  comments: String
  description: String
  accountNumNavigation: Account!
  postedByNavigation: UserProfile!
}

type WatchStatusDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  watchStatus: String!
  accounts: [Account!]!
}

type WorkInProgressJob {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  wipdate: Date!
  jobNumber: String!
  description: String!
  bondNumber: String
  contractPrice: Long!
  estimatedCost: Long!
  estimatedGrossProfit: Long!
  percentComplete: Float!
  earnedRevenue: Long!
  costToDate: Long!
  grossProfit: Long!
  grossProfitPercent: Decimal
  progressBillings: Long
  underBillings: Long!
  overBillings: Long!
  revenueRemaining: Long!
  costToComplete: Long!
  totalEstimatedGrossProfit: Long!
  jobStatus: String!
  enteredContractPrice: Long
  enteredEstimatedCost: Long
  enteredCostToDate: Long
  enteredProgressBillings: Long
  otherJobsContractPrice: Long
  otherJobsEstimatedCost: Long
  otherJobsCostToDate: Long
  otherJobsProgressBillings: Long
  accountNumNavigation: Account!
  bondNumberNavigation: Bond
  workInProgressSummary: WorkInProgressSummary!
}

type NotebookEntry {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  notebookId: UUID!
  type: String!
  createdBy: UUID!
  category: String
  note: String!
  completed: Boolean!
  completion: DateTime
  reminderTime: DateTime
  columnName: Boolean!
  createdByNavigation: UserProfile!
  notebook: Notebook!
  typeNavigation: NotebookEntryTypeDm!
}

type LineOfAuthorityLog {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  sequenceNumber: Int!
  effective: DateTime!
  expiration: DateTime!
  loasingle: Int!
  loaaggregate: Int!
  comments: String
  status: String
  approvedBy: UUID
  approved: DateTime
  division: String
  bondType: String
  conditions: String
  homeOfficeApproved: Boolean!
  createdBy: UUID
  approvedByNavigation: UserProfile
  createdByNavigation: UserProfile
  divisionNavigation: DivisionDm
  statusNavigation: LineOfAuthorityStatusDm
}

type BondBlock {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  prefix: String!
  firstNumber: Int!
  lastNumber: Int!
  enabled: Boolean!
  agencyRestricted: Boolean!
  issuedBy: UUID
  comments: String
  issuedByNavigation: UserProfile
}

type AgencyStatusLog {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  effective: DateTime!
  oldStatus: String
  newStatus: String
  changedBy: UUID
  comments: String
  changedByNavigation: UserProfile
}

type AccountStatusLog {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  accountStatus: String!
  modifiedBy: UUID!
  comments: String
  effective: DateTime!
  accountStatusNavigation: AccountStatusDm!
  modifiedByNavigation: UserProfile!
}

type AccountProgramUserAuthority {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  userId: UUID!
  accountClassId: UUID!
  effective: DateTime!
  expiration: DateTime!
  single: Int!
  aggregate: Int!
  createdBy: UUID!
  modifiedBy: UUID!
  createdByNavigation: UserProfile!
  modifiedByNavigation: UserProfile!
  user: UserProfile!
}

type AccountProgramEmailNotificationGroup {
  id: Int!
  created: DateTime
  modified: DateTime
  userId: UUID!
  sendTo: String
  user: UserProfile!
}

type SfaabondTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  sfaabondType: String!
  bonds: [Bond!]!
}

type OpenClaim {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bondNumber: String!
  claimNumber: String!
  adjusterName: String!
  reserve: Decimal
  bondNumberNavigation: Bond!
}

type Address {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  address1: String!
  address2: String
  address3: String
  city: String!
  stateCode: String
  postalCode: String
  bonds: [Bond!]!
  branches: [Branch!]!
  legalEntityAddress: LegalEntityAddress
  stateCodeNavigation: State
}

type Collateral {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  type: String
  amount: Int
  expiration: Date
  autoRenew: Boolean!
  description: String
  bondNumber: String
  bondSpecific: Boolean
  released: DateTime
  bondNumberNavigation: Bond
}

type BondStatusLetter {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bondNumber: String!
  sent: Date!
  receivedBack: Date
  percentComplete: Float
  bondNumberNavigation: Bond!
}

type AdditionalObligee {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  obligeeNum: UUID!
  printStatusLetter: Boolean!
  interest: String
  bondNumber: String!
  bondNumberNavigation: Bond!
}

type RegionDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  region: String!
  bondTransactions: [BondTransaction!]!
  branches: [Branch!]!
}

type BondTransactionPurpose {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bondNumber: String!
  transactionGroup: UUID!
  transactionPurpose: String!
  bondMod: Int!
  groupNumber: Int!
  oldValue: String!
  newValue: String!
  bondNumberNavigation: Bond!
  bondTransaction: BondTransaction!
}

type AccountClassDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountClass: String!
  name: String!
  divisionGeneralLedgerCode: Int
  active: Boolean!
  lineOfAuthorityNotificationGroup: String
  bondTransactions: [BondTransaction!]!
  defaultGeneralLedgerAccounts: [DefaultGeneralLedgerAccount!]!
}

type OtherBid {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bidNumber: String!
  bidder: String!
  amount: Int!
  bidNumberNavigation: BondRequest!
}

type Obligee {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  obligeeNum: String!
  type: String
  editedBy: UUID
  printStatusLetter: Boolean!
  notes: String
  bondRequests: [BondRequest!]!
  editedByNavigation: UserProfile
  idNavigation: LegalEntity!
  typeNavigation: ObligeeTypeDm
}

type BidSubcontractor {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bidNumber: String!
  name: String!
  trade: String
  amount: Int
  bonded: Boolean!
  bidNumberNavigation: BondRequest!
}

type BidResultDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  description: String!
  order: Int!
  bondRequests: [BondRequest!]!
}

"The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1."
scalar Long

type BidStatusDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  status: String!
  order: Int!
  bondRequestCommercials: [BondRequestCommercial!]!
  bondRequests: [BondRequest!]!
}

type State {
  code: String!
  created: DateTime!
  modified: DateTime!
  name: String!
  saacode: String
  wrbstateCode: String
  countryCode: String
  addresses: [Address!]!
  agencyLicenses: [AgencyLicense!]!
  bondHolds: [BondHold!]!
  bonds: [Bond!]!
  countryCodeNavigation: CountryDm
  insurerStates: [InsurerState!]!
  surcharges: [Surcharge!]!
}

type Sic {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  code: String!
  name: String!
  general: String!
  riskLevel: String
  bondHolds: [BondHold!]!
  bonds: [Bond!]!
  sicratios: [Sicratio!]!
}

type Sfaa {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  code: Int!
  description: String
  general: String!
  rateClass: String
  riskType: String
  nmlsclassCode: Boolean!
  bondHolds: [BondHold!]!
  bondRequestCommercials: [BondRequestCommercial!]!
  bondTransactions: [BondTransaction!]!
}

type Insurer {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  active: Boolean!
  defaultRateGroup: String
  currencyCountry: String!
  lenumPeopleSoft: String
  agencyLicenses: [AgencyLicense!]!
  bondHolds: [BondHold!]!
  bonds: [Bond!]!
  currencyCountryNavigation: CountryDm!
  idNavigation: LegalEntity!
  insurerStates: [InsurerState!]!
  onlineBondSystems: [OnlineBondSystem!]!
  powerOfAttorneys: [PowerOfAttorney!]!
}

type BondTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bondType: String!
  bondClass: String!
  description: String
  class: String
  active: Boolean!
  bondHolds: [BondHold!]!
  bonds: [Bond!]!
}

type LegalEntityPhone {
  legalEntityId: UUID!
  phoneNumberId: UUID!
  type: String!
  legalEntity: LegalEntity!
  phoneNumber: PhoneNumber!
  typeNavigation: PhoneTypeDm!
}

type Subaccount {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  parentAccountId: UUID!
  sequence: Int!
  stated: Int
  adjustment: Int
  asAllowed: Int
  comments: String
  parentAccount: BalanceSheet!
}

type VoidedBond {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  bondNumber: String!
  agencyId: UUID!
  comments: String
  voidedBy: UUID!
  agency: Agency!
  voidedByNavigation: UserProfile!
}

type AgencyStatusDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  status: String!
  agencies: [Agency!]!
}

type OnlineBondSystem {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  agencyId: UUID!
  systemName: String!
  insurerId: UUID!
  powerOfAttorneyId: UUID!
  agency: Agency!
  insurer: Insurer!
  powerOfAttorney: PowerOfAttorney!
  systemNameNavigation: AgentSystemDm!
}

type AgentsInAgency {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  agentId: UUID!
  agencyId: UUID!
  attorneyInFact: Boolean!
  portalUser: Boolean!
  active: Boolean!
  comments: String
  agency: Agency!
  agent: Agent!
}

type AgencyInventory {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  agencyId: UUID!
  sent: DateTime
  quantity: Int
  documentType: String!
  addresseeId: UUID
  approver: UUID!
  addressee: LegalEntity
  agency: Agency!
  approverNavigation: UserProfile!
  documentTypeNavigation: InventoryDocumentDm!
}

type AgencyErrorAndOmission {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  agencyId: UUID!
  carrier: String!
  expiration: Date!
  coverageLimit: Int!
  agency: Agency!
}

type AccountProgramStatusHistory {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  companyId: Int!
  oldStatus: UUID
  newStatus: UUID!
  oldSingle: Int
  newSingle: Int!
  oldAggregate: Int
  newAggregate: Int!
  statusDate: DateTime!
  statusChangeBy: UUID!
  accountProgramId: UUID!
  accountProgram: AccountProgram!
}

type Surcharge {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  state: String!
  amount: Float!
  effective: Date!
  expiration: Date!
  exclude: Boolean!
  type: String!
  createdBy: UUID!
  createdByNavigation: UserProfile!
  stateNavigation: State!
  typeNavigation: SurchargeTypeDm!
}

type UserLineOfAuthority {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  userId: UUID!
  single: Int!
  aggregate: Int!
  expiration: Date!
  divisionCode: String!
  bondType: String!
  createdBy: UUID!
  modifiedBy: UUID!
  createdByNavigation: UserProfile!
  modifiedByNavigation: UserProfile!
  user: UserProfile!
}

type StatementBasisDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  basis: String!
  cashFlowStatements: [CashFlowStatement!]!
  personalFinancialHeaders: [PersonalFinancialHeader!]!
}

type StatementQualityDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  quality: String!
  cashFlowStatements: [CashFlowStatement!]!
  personalFinancialHeaders: [PersonalFinancialHeader!]!
}

type ScalingDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  scaling: String!
  cashFlowStatements: [CashFlowStatement!]!
  personalFinancialHeaders: [PersonalFinancialHeader!]!
}

type StatementTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  type: String!
  cashFlowStatements: [CashFlowStatement!]!
}

type AccountReference {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  type: String
  idNavigation: LegalEntity!
  typeNavigation: ReferenceTypeDm
}

type AgencyLicense {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  agentId: UUID
  state: String!
  licenseNumber: String
  isResident: Boolean!
  insurerId: UUID!
  expiration: Date
  comments: String
  status: String!
  appointment: Date
  termination: Date
  appointingState: Boolean
  agent: LegalEntity
  idNavigation: LegalEntity!
  insurer: Insurer!
  stateNavigation: State!
}

type LegalEntityTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  entityType: String!
  legalEntities: [LegalEntity!]!
}

type LegalEntityAddress {
  legalEntityId: UUID!
  addressId: UUID!
  type: String!
  address: Address!
  legalEntity: LegalEntity!
  typeNavigation: AddressTypeDm!
}

type LegalEntityEmail {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  legalEntityId: UUID!
  type: String!
  emailAddress: String!
  legalEntity: LegalEntity!
  typeNavigation: EmailTypeDm!
}

type PersonalFinancialHeader {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  statementDate: Date!
  type: String
  basis: String
  taxBasis: String
  quality: String
  scaling: String
  statementFor: String!
  comments: String
  personId: UUID!
  basisNavigation: StatementBasisDm
  person: LegalEntity!
  personalFinancialStatements: [PersonalFinancialStatement!]!
  qualityNavigation: StatementQualityDm
  scalingNavigation: ScalingDm
  taxBasisNavigation: TaxBasisDm
  typeNavigation: PersonalFinancialStatementTypeDm
}

type ImagingCategoryTabDivision {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  category: String!
  tabName: String!
  divisionCode: String!
  categoryNavigation: ImagingCategory!
  divisionCodeNavigation: DivisionDm!
  tabNameNavigation: ImagingTab!
}

type ProfitCenter {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  profitCenter1: String!
  divisionCode: String!
  lineOfBusiness: String!
  location: String!
  locationOverview: String!
  budgetDefault: UUID!
  underWriterId: UUID
  effective: Date!
  expiration: Date!
  commercialRegion: String
  budgetDefaultNavigation: ProfitCenter
  commercialRegionNavigation: CommercialRegionDm
  divisionCodeNavigation: DivisionDm!
  inverseBudgetDefaultNavigation: [ProfitCenter!]!
  lineOfBusinessNavigation: LineOfBusinessDm!
  underWriter: Underwriter
}

type EmailActionDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  action: String!
  emailHistories: [EmailHistory!]!
}

type ResponsibilityDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  responsibility: String!
  keyPersonels: [KeyPersonel!]!
}

type PersonalFinancialSubaccount {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  parentAccountId: UUID!
  sequence: Int!
  stated: Int
  adjustment: Int
  asAllowed: Int
  comments: String
  parentAccount: PersonalFinancialStatement!
}

type Employee {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  activeDirectoryAccount: String!
  initials: String!
  fullName: String!
  title: String
  email: String
  primaryBranchId: UUID
  homeOfficeApprover: Boolean!
  active: Boolean!
  underwriterIdNavigation: Underwriter
  underwriterReportsToNavigations: [Underwriter!]!
}

"The built-in `Decimal` scalar type."
scalar Decimal

type WorkInProgressSummary {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountNum: String!
  wipdate: Date!
  contractPrice: Long!
  estimatedCost: Long!
  estimatedGrossProfit: Long!
  percentComplete: Float!
  earnedRevenue: Long!
  costToDate: Long!
  grossProfit: Long!
  grossProfitPercent: Decimal
  progressBillings: Long
  underBillings: Long!
  overBillings: Long!
  revenueRemaining: Long!
  costToComplete: Long!
  totalEstimatedGrossProfit: Long!
  workInProgressJobs: [WorkInProgressJob!]!
}

type LineOfBusinessDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  lineOfBusiness: String!
  profitCenters: [ProfitCenter!]!
}

type CommercialRegionDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  region: String!
  profitCenters: [ProfitCenter!]!
}

type ImagingTab {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  tabName: String!
  description: String!
  imagingCategoryTabDivisions: [ImagingCategoryTabDivision!]!
}

type ImagingCategory {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  category: String!
  imagingCategoryTabDivisions: [ImagingCategoryTabDivision!]!
}

type PersonalFinancialStatementTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  type: String!
  personalFinancialHeaders: [PersonalFinancialHeader!]!
}

type EmailTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  type: String!
  legalEntityEmails: [LegalEntityEmail!]!
}

type AddressTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  type: String!
  order: Int!
  legalEntityAddresses: [LegalEntityAddress!]!
}

type ReferenceTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  type: String!
  description: String
  accountReferences: [AccountReference!]!
}

type SurchargeTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  type: String!
  surcharges: [Surcharge!]!
}

type InventoryDocumentDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  documentType: String!
  agencyInventories: [AgencyInventory!]!
}

type AgentSystemDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  systemName: String!
  onlineBondSystems: [OnlineBondSystem!]!
}

type PhoneTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  type: String!
  order: Int!
  legalEntityPhones: [LegalEntityPhone!]!
}

type PowerOfAttorney {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  insurerId: UUID!
  agencyId: UUID!
  limit: Int!
  serial: Int!
  firstIssued: Date
  currentIssued: Date
  comments: String
  status: String!
  insurer: Insurer!
  onlineBondSystems: [OnlineBondSystem!]!
  powerOfAttorneyDocumentStatuses: [PowerOfAttorneyDocumentStatus!]!
  statusNavigation: PowerOfAttorneyStatusDm!
}

type Sicratio {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  code: String!
  type: String!
  name: String!
  upperQuartileStated: Float!
  medianStated: Float!
  lowerQuartileStated: Float
  upperQuartileAllowed: Float!
  medianAllowed: Float!
  lowerQuartileAllowed: Float
  sampleSize: Int!
  codeNavigation: Sic!
  typeNavigation: SicratioTypeDm!
}

type InsurerState {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  insurerId: UUID!
  state: String!
  insurer: Insurer!
  stateNavigation: State!
}

type CountryDm {
  code: String!
  created: DateTime!
  modified: DateTime!
  name: String!
  insurers: [Insurer!]!
  states: [State!]!
}

type ObligeeTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  type: String!
  obligees: [Obligee!]!
}

type DefaultGeneralLedgerAccount {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountName: String!
  accountClass: String!
  accountType: String!
  fundedDebt: Boolean!
  accountClassNavigation: AccountClassDm!
}

type AccountStatusDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  accountStatus: String!
  active: Boolean!
  accountStatusLogs: [AccountStatusLog!]!
}

type LineOfAuthorityStatusDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  status: String!
  lineOfAuthorityLogs: [LineOfAuthorityLog!]!
}

type NotebookEntryTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  type: String!
  notebookEntries: [NotebookEntry!]!
}

type Notebook {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  sourceTable: String!
  notebookEntries: [NotebookEntry!]!
}

type SicratioTypeDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  type: String!
  sicratios: [Sicratio!]!
}

type PowerOfAttorneyStatusDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  status: String!
  powerOfAttorneys: [PowerOfAttorney!]!
}

type PowerOfAttorneyDocumentStatus {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  poaid: UUID!
  requested: Date
  received: Date
  name: String
  nameNavigation: PowerOfAttorneyDocumentNameDm
  poa: PowerOfAttorney!
}

type PowerOfAttorneyDocumentNameDm {
  id: UUID!
  created: DateTime!
  modified: DateTime!
  name: String!
  powerOfAttorneyDocumentStatuses: [PowerOfAttorneyDocumentStatus!]!
}

type UpdateBankPayload {
  account: Account
}